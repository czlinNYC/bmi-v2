import { ProspectsService } from './prospects.service';
export declare class ProspectsController {
    private readonly prospectsService;
    constructor(prospectsService: ProspectsService);
    createMany(email: string, phone: string, DNC: string, prospects: {
        comapany_name: string;
        contact_name: string;
        last_name: string;
        first_name: string;
        job_title: string;
        email: string;
        phone: string;
        country: string;
        website: string;
        address: string;
        city: string;
        state: string;
        zip: string;
        industry: string;
        sub_industry: string;
        phone_verfied: boolean;
        phone_type: string;
        phone_status: string;
        phone_DNC: boolean;
        email_verfied: boolean;
        email_type: string;
        email_status: string;
        email_sub_status: string;
        batch_id: number;
    }[]): Promise<any>;
    create(prospect: {
        comapany_name: string;
        contact_name: string;
        last_name: string;
        first_name: string;
        job_title: string;
        email: string;
        phone: string;
        country: string;
        website: string;
        address: string;
        city: string;
        state: string;
        zip: string;
        industry: string;
        sub_industry: string;
        phone_verfied: boolean;
        phone_type: string;
        phone_status: string;
        phone_DNC: boolean;
        email_verfied: boolean;
        email_type: string;
        email_status: string;
        email_sub_status: string;
        batch_id: number;
    }): Promise<any>;
    findAll(page?: number): Promise<any>;
    findOne(id: string): Promise<any>;
    update(id: string, prospect: {
        comapany_name: string;
        contact_name: string;
        last_name: string;
        first_name: string;
        job_title: string;
        email: string;
        phone: string;
        country: string;
        website: string;
        address: string;
        city: string;
        state: string;
        zip: string;
        industry: string;
        sub_industry: string;
        phone_verfied: boolean;
        phone_type: string;
        phone_status: string;
        phone_DNC: boolean;
        email_verfied: boolean;
        email_type: string;
        email_status: string;
        email_sub_status: string;
        batch_id: number;
    }): Promise<any>;
    remove(id: string): Promise<any>;
}
